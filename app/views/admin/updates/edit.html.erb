<%#
# Edit

This view is the template for the edit page.

It displays a header, and renders the `_form` partial to do the heavy lifting.

## Local variables:

- `page`:
  An instance of [Administrate::Page::Form][1].
  Contains helper methods to help display a form,
  and knows which attributes should be displayed in the resource's form.

[1]: http://www.rubydoc.info/gems/administrate/Administrate/Page/Form
%>

<% content_for(:title) { "Edit #{page.page_title}" } %>

<header class="header">
  <h1 class="header__heading"><%= content_for(:title) %></h1>
  <div class="header__actions">

    <% if page.resource.status != Update.statuses[:accepted] %>
      <%= form_tag([:accept, namespace, page.resource]) do %>
        <%= submit_tag("Accept", class: 'button') %>
      <% end %>
    <% end %>

    <% if page.resource.status != Update.statuses[:rejected] %>
      <%= form_tag([:reject, namespace, page.resource]) do %>
        <%= submit_tag("Reject", class: 'button button--danger') %>
      <% end %>
    <% end %>

    <%= link_to(
      "Show #{page.page_title}",
      [namespace, page.resource],
      class: "button",
    ) %>
  </div>
</header>

<%= render "form", page: page %>
